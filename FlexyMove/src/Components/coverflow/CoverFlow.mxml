<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:coverflow="Components.coverflow.*"
		 creationComplete="init(event)"
		 width="100%" height="100%">
	
	<s:layout>
		<s:VerticalLayout horizontalAlign="center"/>
	</s:layout>
	
	<fx:Metadata>
		[Event("change", type="mx.events.Event")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import Components.coverflow.itemsRenderers.MyFolderRenderer;
			import Components.coverflow.itemsRenderers.MyMovieRenderer;
			import Components.player.PopUpPlayer;
			
			import com.flexymove.Managers.MarkerManager;
			import com.flexymove.VO.VideoInfoVO;
			
			import mx.collections.ArrayList;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			public const HORIZONTALDISTANCE:Number = 81;		// 0 TO 200
			public const SELECTEDITEMPROXIMITY:Number = 30;		// 0 TO 200	
			public const DEPTHDISTANCE:Number = 68; 			// 1 TO 200
			public const ELEMENTROTATION:Number = -45; 			// -90 TO 0 -35
			public const FOCALLENGTH:Number = 1000;				// 1 TO 1000
			public const PERSPECTIVEPROJECTIONX:Number = 250;	// -1000 TO 1000
			public const PERSPECTIVEPROJECTIONY:Number = 124;	// -1000 TO 1000
			
			[Bindable]
			public var fileList:ArrayList;
			public var popup : PopUpPlayer = null;// CHANGE THAT
			public var selectedChannel : String = "";
			
			private function init(event:FlexEvent):void
			{
				fileList = MarkerManager.getInstance().getVideosFromChannel( selectedChannel );
			}
			
			/** Return a Class Factory adapted to the item :
			 *  - Movie
			 * 	- Picture
			 *  - Folder
			 *  - Music */
			private function itemRender(item:VideoInfoVO):ClassFactory 
			{
				var cla:Class = null;
				
				if (!item is VideoInfoVO)
					cla = MyFolderRenderer;
				else
					cla = MyMovieRenderer;
				
				return new ClassFactory(cla);
			}
			
			// FIXME should be the same channel, not to be set like that
			public function onClick():void
			{
				var item:VideoInfoVO = list.selectedItem as VideoInfoVO;
				videoTitle.text = item.title;
			}
			
			private function onDisplayButtonDoubleClick(e:MouseEvent):void
			{
				var selected:VideoInfoVO = (list.selectedItem as VideoInfoVO);
				
				// Popup Video
				var win : PopUpPlayer = new PopUpPlayer();
				win.idYoutubeVideo = selected.idYoutubeVideo;
				win.playerType = selected.playerType
				
				PopUpManager.addPopUp(win,this,true);
				PopUpManager.centerPopUp(win);
			}
	
			
		]]>
	</fx:Script>
	
	<s:VGroup>
		<s:Label paddingTop="20" id="videoTitle" fontStyle="italic" color="#223344" fontSize="35" textAlign="center"/>
	</s:VGroup>

	
	<coverflow:RoundedSelectionTileList  id="list" bottom="0" width="90%" height="75%" borderVisible="false"
				  rowHeight="180" columnWidth="180" columnCount="4"
				  click="onClick()" contentBackgroundAlpha="0.0" dataProvider="{fileList}"
				  doubleClick="onDisplayButtonDoubleClick(event)" doubleClickEnabled="true" 
				  selectedIndex="0">
		<coverflow:itemRenderer>
			<fx:Component>
				<mx:VBox horizontalAlign="center" verticalAlign="middle">
					<s:Group>
						<s:BitmapImage id="film"
									   source="{data.playerType == 'youtube' ?
									   'http://img.youtube.com/vi/' + data.idYoutubeVideo + '/0.jpg'
									   :( data.playerType == 'dailymotion' ?
									   'http://www.dailymotion.com/thumbnail/135x135/video/' + data.idYoutubeVideo : data.idYoutubeVideo)}"
									   verticalCenter="0" horizontalCenter="0"  width="140" maxHeight="140" />
					</s:Group>
					
				</mx:VBox>
			</fx:Component>
		</coverflow:itemRenderer>

	</coverflow:RoundedSelectionTileList>
</s:Group>
