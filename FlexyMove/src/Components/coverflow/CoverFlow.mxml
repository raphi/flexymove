<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:Components="Components.*"
		 width="100%" height="100%" 
		 creationComplete="init()" xmlns:coverflow="Components.coverflow.*">
	
	<fx:Metadata>
		[Event("change", type="mx.events.Event")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import Components.PopUpPlayer.PopUpPlayer;
			import Components.coverflow.itemsRenderers.FolderRenderer;
			import Components.coverflow.itemsRenderers.MovieRenderer;
			import Components.coverflow.itemsRenderers.MusicRenderer;
			import Components.coverflow.itemsRenderers.MyFolderRenderer;
			import Components.coverflow.itemsRenderers.MyMovieRenderer;
			import Components.coverflow.itemsRenderers.PictureRenderer;
			import Components.coverflow.itemsRenderers.PodRenderer;
			
			import mx.collections.ArrayList;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			public const HORIZONTALDISTANCE:Number = 81;		// 0 TO 200
			public const SELECTEDITEMPROXIMITY:Number = 30;		// 0 TO 200	
			public const DEPTHDISTANCE:Number = 68; 			// 1 TO 200
			public const ELEMENTROTATION:Number = -35; 			// -90 TO 0
			public const FOCALLENGTH:Number = 1000;				// 1 TO 1000
			public const PERSPECTIVEPROJECTIONX:Number = 250;	// -1000 TO 1000
			public const PERSPECTIVEPROJECTIONY:Number = 124;	// -1000 TO 1000
			
			[Bindable]
			public var fileList:ArrayList = new ArrayList();
			
			/** init coverflow component 
			 **/ 
			public function init (): void
			{
				for (var i:int = 0; i < 5; i++) 
				{
					var itemFolder:ItemCoverFlow = new ItemCoverFlow(true);
					itemFolder.title = "Folder " + i;
					itemFolder.owner = "Peron " + i;
					
					fileList.addItem(itemFolder);
				}
				for ( i = 0; i < 10; i++) 
				{
					
					var itemVideo:ItemCoverFlow = new ItemCoverFlow(false,"PXRX47L_3yE");
					itemVideo.title = "Movie " + i;
					itemVideo.time = i * 10;
					itemVideo.owner = "Peron " + i + 10;
					itemVideo.chanel = "chanel" + i;
					fileList.addItem(itemVideo);
					
				}
				
			}
			
			/** Return a Class Factory adapted to the item :
			 *  - Movie
			 * 	- Picture
			 *  - Folder
			 *  - Music */
			private function itemRender(item:ItemCoverFlow):ClassFactory {
				var cla:Class = PodRenderer;
				if (item.isFolder)
					cla = MyFolderRenderer;
				else
					cla = MyMovieRenderer;				
				return new ClassFactory(cla);
			}
			
			public function getTitle():void
			{
				var item:ItemCoverFlow = ItemCoverFlow(list.selectedItem);
				
				type.text = item.isFolder ? "folder" : "Movie";
				title.text = item.title;
				prop.text = item.owner;
				chanel.text = item.chanel;
				if (!item.isFolder)
				{
					duree.width = 100;
					duree.height = 10;
					InfoDuree.width = 100;
					InfoDuree.height = 10;
					duree.text = item.time + " s";
				}
				else
				{
					duree.width = 0;
					duree.height = 0;
					InfoDuree.width = 0;
					InfoDuree.height = 0;
				}
			}
			

			private function getListVideosInChanelFromLiveCycle(chanelName:String):ArrayList
			{
				var itemList: ArrayList = new ArrayList();
				//Implement It to check LiveCycle
				for (var i:int = 0; i < 2; i++) 
				{
					var itemFolder:ItemCoverFlow = new ItemCoverFlow(true);
					itemFolder.title = "Folder " + i;
					itemFolder.owner = "Peron " + i;
					
					itemList.addItem(itemFolder);
				}
				for ( i = 0; i < 5; i++) 
				{
					
					var itemVideo:ItemCoverFlow = new ItemCoverFlow(false,"8RHAEwQAZlA");
					itemVideo.title = "Movie " + i;
					itemVideo.time = i * 10;
					itemVideo.owner = "Peron " + i + 10;
					itemVideo.chanel = "chanel" + i;
					itemList.addItem(itemVideo);
					
				}
				return itemList;
			}
			private function onDisplayButtonDoubleClick(e:MouseEvent):void
			{
				var selected : ItemCoverFlow = (list.selectedItem as ItemCoverFlow);
				
				if (selected.isFolder)
				{
					//Get List Chanel and reload list
					fileList = new ArrayList();
					
					fileList = getListVideosInChanelFromLiveCycle(selected.chanel);
					
				}
				else
				{	// popup Video
					var win : PopUpPlayer = new PopUpPlayer();
					win.idYoutubeVideo = selected.idYoutubeVideo;
					PopUpManager.addPopUp(win,this,true);
					
					PopUpManager.centerPopUp(win);
				}
			}
			
		]]>
	</fx:Script>
	
	
	
	
	<s:List id="list" x="0" y="0" width="100%" height="100%" borderVisible="false"
			click="{getTitle()}" contentBackgroundAlpha="0.0" dataProvider="{fileList}"
			itemRendererFunction="itemRender" selectedIndex="0" doubleClickEnabled="true" doubleClick="onDisplayButtonDoubleClick(event)">
		
		<s:layout>
			<coverflow:CoverflowLayout id="coverflow" 
									   selectedIndex="{ list.selectedIndex }"
									   horizontalDistance="{HORIZONTALDISTANCE}"
									   selectedItemProximity="{SELECTEDITEMPROXIMITY}"
									   depthDistance="{DEPTHDISTANCE}" 
									   elementRotation="{ELEMENTROTATION}" 
									   focalLength="{FOCALLENGTH}"
									   perspectiveProjectionX="{PERSPECTIVEPROJECTIONX}" 
									   perspectiveProjectionY="{PERSPECTIVEPROJECTIONY}"/>
			
		</s:layout>
		
	</s:List>
	
	<s:Label id="l1" text="{list.selectedItem}"/>
	<s:Panel id = "info" x="24" y="10" width="206" height="128" title="Info">
		<s:Label x="2" text="Type :"/> <s:Label id="type" x="47" y="0" />
		<s:Label x="2" y="15" height="12" text="Titre :"/> <s:Label id="title" x="47" y="15" />
		<s:Label x="2" y="30" height="12" text="Propriétaire :"/> <s:Label id="prop" x="75" y="29" />
		<s:Label x="2" y="45" height="12" text="chanel :"/> <s:Label id="chanel" x="47" y="45" />
		<s:Label id="InfoDuree" x="2" y="60" height="12" text="Durée :"/> <s:Label id="duree" x="47" y="60" />
	</s:Panel>
</s:Group>
