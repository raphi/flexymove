<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   height="700" width="1200" backgroundAlpha="0.7" backgroundColor="0xD0D0F0"
			   creationComplete="init()" hideEffect="{hideEffect}" showEffect="{showEffect}"
			   title="{ horizontalList.selectedItem.title }"
			   color="#FFFFFF" cornerRadius="10"
			   close="PopUpManager.removePopUp(this)">
	
	<s:layout>
		<s:VerticalLayout horizontalAlign="center"/>
	</s:layout>
	
	<fx:Script>
		<![CDATA[
			import com.flexymove.Managers.MarkerManager;
			import com.flexymove.Utils.Utils;
			import com.flexymove.VO.VideoInfoVO;
			
			import mx.collections.ArrayList;
			import mx.managers.PopUpManager;
			
			[Bindable]
			private var pictureList:ArrayList = new ArrayList();
			public var interval:uint;
			[Bindable]
			public var index : int = 0;
			
			private function init():void
			{
				getPictureList(MarkerManager.getInstance().getVideoDisplayInfosList())
				interval = setInterval(changePicture, 3000);
			}
			
			private function getPictureList(infoList : ArrayList): void
			{
				for (var i : int = 0 ; i < infoList.length;i++)
				{
					var videoVO : VideoInfoVO = VideoInfoVO(infoList.getItemAt(i));
					if(videoVO.playerType == "picture" && Utils.urlIsPicture(videoVO.idYoutubeVideo))
						pictureList.addItem(videoVO);
				}
			}
			
			private function changePicture():void
			{
				if (index < (pictureList.length - 1))
				{
					index++;
				}
				else
				{
					index = 0;
				}

				horizontalList.ensureIndexIsVisible( index );
			}
			
			private var state:String = "play"
				
			private function pause():void
			{
				if(state == "play")
				{
					clearInterval(interval);
					state = "pause";
					controle.source="assets/images/play_gallery.png";
				}
				else
				{
					interval= setInterval(changePicture, 3000);
					state = "play";
					controle.source="assets/images/pause_gallery.png";
				}
				
			}
			
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="state1"/>
		<s:State name="state2"/>
	</s:states>
	
	<fx:Declarations>
		<s:Fade id="showEffect" alphaFrom="0" alphaTo="1" duration="500" />
		<s:Fade id="hideEffect" alphaFrom="1" alphaTo="0" duration="500" />
		<s:CrossFade id="crossfader" targets="{[img]}"/>
	</fx:Declarations>
	
	<s:transitions>
		<s:Transition id="transition" effect="{crossfader}" autoReverse="true"/>
	</s:transitions>
	
	<s:Image id="img" width="100%" height="100%"
			 source="{horizontalList.selectedItem.idYoutubeVideo}"
			 scaleMode="letterbox" smoothingQuality="high"
			 show="currentState = (currentState == 'state1') ? 'state2':'state1';"
			 smooth="true"/>
	
	<s:List id="horizontalList" 
			dataProvider="{pictureList}"
			horizontalScrollPolicy="auto"
			selectedIndex="{ index }" itemRenderer="Components.gallery.VignetteRenderer"
			width="100%">
		<s:layout>
			<s:HorizontalLayout/>
		</s:layout>
	</s:List>
	
	<s:Image id="controle" source="assets/images/pause_gallery.png" click="pause()"/>
	
</s:TitleWindow>
