<?xml version="1.0" encoding="utf-8"?>
<s:BorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009"
				   xmlns:s="library://ns.adobe.com/flex/spark"
				   xmlns:mx="library://ns.adobe.com/flex/mx"
				   xmlns:Completion="Components.Completion.*"
				   showEffect="{showEffect}" hideEffect="{hideEffect}"
				   right="left" top="0"  width="100%" height="40"
				   styleName="panelInfoStyle">
	
	<s:layout>
		<s:VerticalLayout verticalAlign="middle"/>
	</s:layout>
	
	<fx:Declarations>
		<s:Fade id="showEffect" alphaTo="1" duration="500" />
		<s:Fade id="hideEffect" alphaTo="0" duration="500" />
		<s:DateTimeFormatter id="formatDate" dateStyle="medium"/>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import Components.gallery.GalleryPhoto;
			import Components.gmap.UserInfoView;
			import Components.youtubeSearch.YoutubeSearch;
			
			import ca.newcommerce.youtube.data.VideoData;
			
			import com.flexymove.Managers.MarkerManager;
			import com.flexymove.Managers.UserManager;
			
			import mx.managers.PopUpManager;
			
			public var videoData : VideoData;
			public static var SELECT_DATA:String = "SELECT_DATA";
			protected function displayeUserInformation():void
			{
				var popupUser:UserInfoView = new UserInfoView();
				
				PopUpManager.addPopUp(popupUser, this.parent, true);
				PopUpManager.centerPopUp(popupUser);  
			}
			
			public function addData(event:Event):void
			{
				 videoData = VideoData ( event.target.videoData);
				PopUpManager.removePopUp(YoutubeSearch(event.target));
				dispatchEvent(new Event(SELECT_DATA))
			}
			
			public function displayMedia(): void
			{
				var dVideo : Boolean = displayVideos.selected;
				var dPicture : Boolean = displayPictures.selected;
				diaporamaButton.enabled = dPicture; 
				MarkerManager.getInstance().displayVideoAndOrPicture(dPicture, dVideo);
			}
			
			public function displayDiaporama(): void
			{
				var popupPicture:GalleryPhoto = new GalleryPhoto();
				PopUpManager.addPopUp(popupPicture, this.parent, true);
				PopUpManager.centerPopUp(popupPicture); 
			}
			
			protected function searchYoutube():void
			{
				var youtubeSearch:YoutubeSearch = new YoutubeSearch();
				PopUpManager.addPopUp(youtubeSearch, this.parent, true);
				PopUpManager.centerPopUp(youtubeSearch);  
				youtubeSearch.addEventListener(YoutubeSearch.SELECT_DATA, addData);	
				
			}
			
		]]>
	</fx:Script>
	
	<s:backgroundFill>
		<s:LinearGradient rotation="90">
			<s:GradientEntry color="0xD0D0F0" alpha="0.6"/>
			<s:GradientEntry color="0x444444" alpha="0.6"/>
		</s:LinearGradient>
	</s:backgroundFill>
	
	<s:HGroup width="100%" horizontalAlign="center" verticalAlign="middle">
		<s:Label text="{UserManager.getInstance().currentUserInfo.name}" click="displayeUserInformation()" color="white" fontWeight="bold" useHandCursor="true"/>
		<s:Image width="30" height="30" click="displayeUserInformation()" smooth="true"
				 smoothingQuality="high" source="/assets/images/utilisateur.png" useHandCursor="true" buttonMode="true"/>
		<s:Image width="30" height="30" click="searchYoutube()" smooth="true" smoothingQuality="high" useHandCursor="true" buttonMode="true"
				 source="/assets/images/Youtube.png"/>
		<Completion:CompletionSearch id="Search" width="50%"/>
		<s:CheckBox label="VidÃ©os" selected="true" id="displayVideos" color="white" click="displayMedia()"/>
		<s:CheckBox label="Photos" selected="true" id="displayPictures" color="white" click="displayMedia()"/>
		<s:Button id="diaporamaButton" click="displayDiaporama()" label="Diaporama"/>			
	</s:HGroup>
	
</s:BorderContainer>
